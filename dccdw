import { useEffect, useState } from 'react';
import axios from 'axios';

const Dashboard = () => {
  const [galleries, setGalleries] = useState([]);
  const [title, setTitle] = useState('');
  const [description, setDescription] = useState('');
  const [imageUrl, setImageUrl] = useState('');
  const [editId, setEditId] = useState(null);
  const [error, setError] = useState('');

  useEffect(() => {
    fetchGalleries();
  }, []);

  const fetchGalleries = async () => {
    try {
      const token = localStorage.getItem('token');
      const response = await axios.get('http://localhost:5000/api/galleries/my-galleries', {
        headers: { Authorization: `Bearer ${token}` },
      });
      setGalleries(response.data);
    } catch (error) {
      setError('Failed to fetch galleries.');
    }
  };

  const handleAddGallery = async (e) => {
    e.preventDefault();
    try {
      const token = localStorage.getItem('token');
      const response = await axios.post('http://localhost:5000/api/galleries', { title, description, image_url: imageUrl }, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setGalleries([...galleries, response.data.gallery]);
      resetForm();
    } catch (error) {
      setError('Failed to add gallery.');
    }
  };

  const handleEditGallery = async (gallery) => {
    setTitle(gallery.title);
    setDescription(gallery.description);
    setImageUrl(gallery.image_url);
    setEditId(gallery.id);
  };

  const handleUpdateGallery = async (e) => {
    e.preventDefault();
    try {
      const token = localStorage.getItem('token');
      const response = await axios.put(`http://localhost:5000/api/galleries/${editId}`, { title, description, image_url: imageUrl }, {
        headers: { Authorization: `Bearer ${token}` },
      });
      const updatedGalleries = galleries.map(gallery => (gallery.id === editId ? response.data.gallery : gallery));
      setGalleries(updatedGalleries);
      resetForm();
    } catch (error) {
      setError('Failed to update gallery.');
    }
  };

  const handleDeleteGallery = async (id) => {
    try {
      const token = localStorage.getItem('token');
      await axios.delete(`http://localhost:5000/api/galleries/${id}`, {
        headers: { Authorization: `Bearer ${token}` },
      });
      setGalleries(galleries.filter(gallery => gallery.id !== id));
    } catch (error) {
      setError('Failed to delete gallery.');
    }
  };

  const resetForm = () => {
    setTitle('');
    setDescription('');
    setImageUrl('');
    setEditId(null);
  };

  return (
    <div className="p-8">
      <h1 className="text-2xl font-bold mb-6">My Galleries</h1>
      {error && <div className="text-red-500 mb-4">{error}</div>}
      
      <form onSubmit={editId ? handleUpdateGallery : handleAddGallery} className="mb-6">
        <div className="mb-4">
          <label className="block text-sm font-medium mb-1" htmlFor="title">Title</label>
          <input
            type="text"
            id="title"
            value={title}
            onChange={(e) => setTitle(e.target.value)}
            className="border rounded w-full py-2 px-3"
            required
          />
        </div>
        <div className="mb-4">
          <label className="block text-sm font-medium mb-1" htmlFor="description">Description</label>
          <textarea
            id="description"
            value={description}
            onChange={(e) => setDescription(e.target.value)}
            className="border rounded w-full py-2 px-3"
            required
          />
        </div>
        <div className="mb-4">
          <label className="block text-sm font-medium mb-1" htmlFor="image_url">Image URL</label>
          <input
            type="text"
            id="image_url"
            value={imageUrl}
            onChange={(e) => setImageUrl(e.target.value)}
            className="border rounded w-full py-2 px-3"
            required
          />
        </div>
        <button
          type="submit"
          className="bg-blue-500 text-white py-2 rounded w-full hover:bg-blue-600"
        >
          {editId ? 'Update Gallery' : 'Add Gallery'}
        </button>
      </form>

      <h2 className="text-xl font-bold mb-4">Your Galleries</h2>
      <table className="min-w-full border border-gray-300">
        <thead>
          <tr>
            <th className="border px-4 py-2">Title</th>
            <th className="border px-4 py-2">Description</th>
            <th className="border px-4 py-2">Image</th>
            <th className="border px-4 py-2">Actions</th>
          </tr>
        </thead>
        <tbody>
          {galleries.map((gallery) => (
            <tr key={gallery.id}>
              <td className="border px-4 py-2">{gallery.title}</td>
              <td className="border px-4 py-2">{gallery.description}</td>
              <td className="border px-4 py-2">
                <img src={gallery.image_url} alt={gallery.title} className="w-16 h-16 object-cover" />
              </td>
              <td className="border px-4 py-2">
                <button
                  onClick={() => handleEditGallery(gallery)}
                  className="bg-yellow-500 text-white py-1 px-2 rounded mr-2 hover:bg-yellow-600"
                >
                  Edit
                </button>
                <button
                  onClick={() => handleDeleteGallery(gallery.id)}
                  className="bg-red-500 text-white py-1 px-2 rounded hover:bg-red-600"
                >
                  Delete
                </button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>
  );
};

export default Dashboard;
